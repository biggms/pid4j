{"name":"Pid4j","tagline":"The Pid4j library consists of PID controllers that you can easily use in your project.","body":"## Welcome to Pid4j.\r\nThis library contains different PID controllers (written in Java) that you can easily use in your project. \r\nThere's an abstraction of the inner workings of the chosen PID controller, so you can easily switch later to another \"type\" of PID controller.\r\n\r\n## What's a PID controller?\r\nFirst of all, what's a PID controller? \r\n\r\nWikipedia defines a PID as follows:\r\n\r\nA proportional-integral-derivative controller (PID controller) is a control loop feedback mechanism (controller) widely used in industrial control systems. A PID controller calculates an error value as the difference between a measured process variable and a desired setpoint. The controller attempts to minimize the error by adjusting the process through use of a manipulated variable. The PID controller algorithm involves three separate constant parameters, and is accordingly sometimes called three-term control: the proportional, the integral and derivative values, denoted P, I, and D. Simply put, these values can be interpreted in terms of time: P depends on the present error, I on the accumulation of past errors, and D is a prediction of future errors, based on current rate of change. The weighted sum of these three actions is used to adjust the process via a control element such as the position of a control valve, a damper, or the power supplied to a heating element.\r\n\r\n## How to use a PID controller in your own project?\r\n\r\nYou can easily create a PID controller in your own Java project:\r\n\r\nFirst, include the library, for example via Maven:\r\n```XML\r\n<dependency>\r\n    <groupId>org.pid4j</groupId>\r\n    <artifactId>pid4j</artifactId>\r\n    <version>0.1-SNAPSHOT</version>\r\n</dependency>\r\n```\r\n\r\nThen you can easily create a PID controller:\r\n```Java\r\nDouble kp = 2.0, ki = 1.0, kd = 0.3;\r\nPid myPid = new DefaultPid(kp, ki, kd);\r\nmyPid.setSetpoint(27.0);\r\nDouble output = myPid.compute(32.0);\r\n```\r\n\r\n## Tutorials\r\n","google":"UA-52989576-1","note":"Don't delete this file! It's used internally to help with page regeneration."}